---
- hosts: all
  vars_files:
    - vars.yml
  pre_tasks:
    -
      name: Check for lock file
      wait_for:
        path: "{{ lock_file }}"
        state: absent
        timeout: "{{ lock_await_release_timeout }}"
    -
      name: Create lock file
      file:
        path: "{{ item.path }}"
        state: "{{ item.state }}"
      loop:
        - { path: "{{ root_folder }}", state: directory }
        - { path: "{{ lock_file }}", state: touch }
  tasks:
    - name: Initialize the deploy root and gather facts
      community.general.deploy_helper:
        path: "{{ root_folder }}"
    - name: Create release path
      file:
        state: directory
        path: "{{ deploy_helper.new_release_path }}"
    - name: Extract dist.tar.gz into {{ deploy_helper.new_release_path }}
      unarchive:
        src: "../.build/dist/artifact.tar.gz"
        dest: "{{ deploy_helper.new_release_path }}"
    - name: Create some folders in the shared folder
      file:
        state: '{{ item.state }}'
        path: '{{ deploy_helper.shared_path }}/{{ item.dest }}'
      loop: "{{ shared_paths|flatten(levels=1) }}"
    - name: Create symlinks for shared paths
      file:
        state: link
        path: "{{ deploy_helper.new_release_path }}/{{ item.dest }}"
        src: "{{ item.src }}"
      loop: "{{ shared_paths|flatten(levels=1) | selectattr('symlink', 'equalto', 'true') | list }}"
    - name: Deploy theme based on the environment
      command: "mv themes_{{ inventory_hostname }} themes"
      args:
        chdir: "{{ root_folder }}/releases/{{ deploy_helper.new_release }}/public/wp-content"
    - name: Remove the other themes
      command: "rm -Rf themes_*"
      args:
        chdir: "{{ root_folder }}/releases/{{ deploy_helper.new_release }}/public/wp-content"
    - name: Create htaccess symlink
      file:
        state: link
        path: "{{ deploy_helper.new_release_path }}/public/.htaccess"
        src: ".htaccess_{{ inventory_hostname }}"

    - name: Finalize the deploy, switching the symlink
      command: "ln -sfn releases/{{ deploy_helper.new_release }} current"
      args:
        chdir: "{{ root_folder }}"
    - name: Finalize the deploy, removing the unfinished file
      community.general.deploy_helper:
        path: "{{ root_folder }}"
        state: clean
  post_tasks:
    -
      name: Remove lock file
      file:
        path: "{{ lock_file }}"
        state: absent
